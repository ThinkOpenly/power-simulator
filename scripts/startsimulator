#!/usr/bin/env python

"""
Copyright (C) 2017 IBM Corporation

Licensed under the Apache License, Version 2.0 (the “License”);
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an “AS IS” BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

    Contributors:
        * Rafael Sene <rpsene@br.ibm.com>
"""

import sys
import os
import pwd


class startsimulator():

    """get username"""
    def getUserName(self):
            return pwd.getpwuid(os.getuid())[0]

    """set the tap0 network interface"""
    def setNetwork(self):
        os.system("clear")
        print "\n\nConfiguring network...\n"
        os.system("sudo tunctl -u " + self.getUserName() + " -t tap0")
        os.system("sudo ifconfig tap0 172.19.98.108 netmask 255.255.255.254")
        os.system("sudo iptables -t nat -A POSTROUTING -j MASQUERADE")
        os.system("sudo iptables -I FORWARD -s 172.19.0.0/16 -i tap0 -j ACCEPT")
        os.system("sudo iptables -I FORWARD -d 172.19.0.0/16 -o tap0 -j ACCEPT")
        os.system("sudo sysctl -w net.ipv4.ip_forward=1 $2>&1")
        os.system("sudo -k")

    """unset the tap0 network interface"""
    def unsetNetwork(self):
        os.system("clear")
        print "\n\nRemoving network configuration...\n"
        os.system("sudo tunctl -d tap0")
        os.system("sudo iptables -D FORWARD -s 172.19.0.0/16 -i tap0 -j ACCEPT")
        os.system("sudo iptables -D FORWARD -d 172.19.0.0/16 -o tap0 -j ACCEPT")
        os.system("sudo iptables -t nat -D POSTROUTING -j MASQUERADE")
        os.system("sudo -k")

    """start the simulator"""
    def startSimulator(self):
        os.system("clear")
        if len(sys.argv) > 2 or len(sys.argv) < 2:
                print "\n Run this script using either of the options:"
                print " * startsimulator [-p8 or -p9]"
                sys.exit()
        else:
            print " \nThis script starts the Power Functional Simulator and sets "
            print " a tap0 interface and all required iptables rules.\n"
            print " NOTE: when the boot is complete access the simulator via ssh: "
            print "     ssh root@172.19.98.109 / pass: mambo\n"

            if str(sys.argv[1]) == "-p8":
                self.setNetwork()
                os.system("/opt/ibm/systemsim-p8/run/pegasus/power8 -W -f /opt/ibm/systemsim-p8/run/pegasus/linux/boot-linux-le.tcl")
                self.unsetNetwork()
            elif str(sys.argv[1]) == "-p9":
                self.setNetwork()
                os.system("/opt/ibm/systemsim-p9/run/p9/power9 -W -f /opt/ibm/systemsim-p9/run/p9/linux/boot-linux-le-skiboot.tcl")
                self.unsetNetwork()
            else:
                print "Could not execute this script."
                sys.exit()


'''
#############  Here starts the main execution #############
'''
try:
    startsimulator().startSimulator()
except:
    sys.exit()
